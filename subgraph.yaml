specVersion: 1.0.0
indexerHints:
  prune: auto
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum
    name: LensHub
    network: matic
    source:
      address: "0xDb46d1Dc155634FbC732f92E853b10B288AD5a1d" #this is the proxy contract
      #"0x176c2a1c54E8b028eeEC14bF0a059E354408FF47" #initialized with implementation contract
      abi: LensHub
      startBlock: 53479915
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Approval
        - ApprovalForAll
        - BatchMetadataUpdate
        - CollectNFTTransferred
        - LensUpgradeVersion
        - TokenGuardianStateChanged
        - Transfer
        - TreasuryFeeSet
        - TreasurySet
        - Unfollowed
      abis:
        - name: LensHub
          file: ./abis/LensHub.json
      eventHandlers:
        ## event details obtained from running graph codegen - available events. Custom type postParams wrapped in a tuple.
        - event: PostCreated((uint256,string,address[],bytes[],address,bytes),indexed uint256,bytes[],bytes,address,uint256) 
          handler: handlePostCreated
      file: ./src/lens-hub.ts
templates:
  - kind: file/arweave
    name: ArweaveContent
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - PostContent
      abis:
        - name: LensHub
          file: ./abis/LensHub.json
      handler: handlePostContent
      file: ./src/lens-hub.ts
  - kind: file/ipfs
    name: IpfsContent
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - PostContent
      abis:
        - name: LensHub
          file: ./abis/LensHub.json
      handler: handlePostContent
      file: ./src/lens-hub.ts